{
  "files": {
    "cardLine.js": {
      "content": "class CardLine extends BezierEdge {\n\n}\n\nclass CardLineModel extends BezierEdgeModel {}\n\nexport default {\n  type: 'card-line',\n  view: CardLine,\n  model: CardLineModel,\n}"
    },
    "htmlCard.js": {
      "content": "class HtmlCard extends HtmlNode {\n  // 重写HtmlNode的setHtml，来控制html节点内容。\n  setHtml(rootEl) {\n    const cardEl = this.getCardEl();\n    rootEl.innerHtml = '';\n    rootEl.appendChild(cardEl);\n  }\n  getCardEl() {\n    const { properties } = this.props.model;\n    const el = document.createElement('div');\n    el.className = 'html-card';\n\n    const header = document.createElement('div');\n    header.className = 'html-card-header';\n    header.innerText = properties.title;\n\n    const body = document.createElement('div');\n    body.className = 'html-card-body';\n    body.innerText = properties.content;\n\n    const footer = document.createElement('div');\n    footer.className = 'html-card-footer';\n\n    if (properties.answers) {\n      properties.answers.map((answer) => {\n        const label = document.createElement('div');\n        label.innerText = answer.text;\n        label.className = 'html-card-label';\n        footer.appendChild(label);\n      });\n    }\n\n    el.appendChild(header);\n    el.appendChild(body);\n    el.appendChild(footer);\n\n    return el;\n  }\n}\n\nclass HtmlCardModel extends HtmlNodeModel {\n  setAttributes() {\n    this.width = 240;\n    this.height = 100;\n    const { properties } = this;\n    if (properties.answers) {\n      let preOffset = 5;\n      const sourceAnchor = properties.answers.map((answer) => {\n        const text = answer.text;\n        const x = -120 + preOffset + (12 * text.length / 2) + 2;\n        preOffset += 12 * text.length + 10 + 4; \n        return [ x, 45]\n      });\n      this.anchorsOffset = [[0, -50]].concat(sourceAnchor);\n    }\n  }\n}\n\nexport default {\n  type: 'html-card',\n  view: HtmlCard,\n  model: HtmlCardModel,\n}"
    },
    "index.html": {
      "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link rel=\"stylesheet\" href=\"//unpkg.com/@logicflow/core/dist/style/index.css\" />\n  <link rel=\"stylesheet\" href=\"./style.css\" />\n  <style>\n    html, body {\n      height: 100%;\n      margin: 0;\n      padding: 0;\n    }\n    #container {\n      height: calc(100% - 20px);\n    }\n  </style>\n</head>\n<body>\n  <div><button id=\"getJson\">获取JSON</button></div>\n  <div id=\"container\"></div>\n  <script src=\"//unpkg.com/@logicflow/core/dist/logic-flow.js\"></script>\n  <script type=\"module\" src=\"./index.js\"></script>\n</body>\n</html>"
    },
    "index.js": {
      "content": "import cardLine from \"./cardLine.js\";\nimport htmlCard from \"./htmlCard.js\";\n\nconst lf = new LogicFlow({\n  container: document.querySelector('#container'),\n  grid: true,\n});\n\nlf.register(cardLine);\nlf.register(htmlCard);\nlf.setDefaultEdgeType('card-line');\nlf.render({\n  nodes: [\n    {\n      id: '1',\n      type: 'html-card',\n      x: 300,\n      y: 100,\n      properties: {\n        title: '普通话术',\n        content: '喂，您好，这里是美家装饰，专业的装修品牌。请问您最近有装修吗？',\n        answers: [\n          {\n            id: '10',\n            text: '装好了'\n          },\n          {\n            id: '11',\n            text: '肯定'\n          },\n          {\n            id: '12',\n            text: '拒绝'\n          },\n          {\n            id: '13',\n            text: '否定'\n          },\n          {\n            id: '14',\n            text: '默认'\n          }\n        ]\n      }\n    },\n    {\n      id: '2',\n      type: 'html-card',\n      x: 200,\n      y: 300,\n      properties: {\n        title: '跳转话术',\n        content: '好的，我们将给安排专门装修师傅上面服务。',\n        answers: [\n          {\n            id: '21',\n            text: '肯定'\n          },\n          {\n            id: '23',\n            text: '否定'\n          }\n        ]\n      }\n    },\n    {\n      id: '3',\n      type: 'html-card',\n      x: 600,\n      y: 300,\n      properties: {\n        title: '普通话术',\n        content: '好的，我们将给安排专门装修师傅上面服务。',\n        answers: [\n          {\n            id: '31',\n            text: '肯定'\n          },\n          {\n            id: '43',\n            text: '否定'\n          }\n        ]\n      }\n    }\n  ],\n  edges: [\n    {\n      \"id\":\"36097b7b-f7fb-4eba-ac84-d9cec1e8f4d0\",\n      \"type\":\"card-line\",\n      \"sourceNodeId\":\"1\",\n      \"targetNodeId\":\"2\",\n      \"startPoint\":{\"x\":249,\"y\":145},\n      \"endPoint\":{\"x\":200,\"y\":250},\n      \"properties\":{},\n      \"pointsList\":[{\"x\":249,\"y\":145},{\"x\":249,\"y\":250},{\"x\":200,\"y\":150},{\"x\":200,\"y\":250}]\n    },\n    {\n      \"id\":\"ab537079-c6d9-45b9-8251-ebb5d7a98998\",\n      \"type\":\"card-line\",\n      \"sourceNodeId\":\"1\",\n      \"targetNodeId\":\"3\",\n      \"startPoint\":{\"x\":325,\"y\":145},\n      \"endPoint\":{\"x\":600,\"y\":250},\n      \"properties\":{},\n      \"pointsList\":[{\"x\":325,\"y\":145},{\"x\":325,\"y\":250},{\"x\":600,\"y\":150},{\"x\":600,\"y\":250}]\n    }\n  ]\n});\n\ndocument.querySelector('#getJson').addEventListener('click', () => {\n  const data = lf.getGraphData();\n  console.log(JSON.stringify(data));\n})"
    },
    "style.css": {
      "content": ".html-card {\n  width: 240px;\n  height: 100px;\n  box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\n  border-radius: 4px;\n  border: 1px solid #ebeef5;\n  background-color: #fff;\n  overflow: hidden;\n  color: #303133;\n  transition: .3s;\n  box-sizing: border-box;\n  padding: 5px;\n}\n.html-card-header {\n  font-size: 12px;\n  line-height: 24px;\n  margin-left: 14px;\n}\n.html-card-header:before{\n  content: \"\";\n  position: absolute;\n  left: 5px;\n  top: 13px;\n  display: block;\n  width: 7px;\n  height: 7px;\n  border: 1px solid #cbcef5;\n  border-radius: 6px;\n}\n.html-card-body {\n  font-size: 12px;\n  color: #6f6a6f;\n  margin-top: 5px;\n}\n\n.html-card-footer {\n  display: flex;\n  position: absolute;\n  bottom: 5px;\n}\n.html-card-label {\n  font-size: 12px;\n  line-height: 16px;\n  padding: 2px;\n  background: #ebeef5;\n  margin-right: 10px;\n}\n"
    }
  }
}
