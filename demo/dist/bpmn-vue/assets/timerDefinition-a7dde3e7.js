import{d as m,r as p,i as _,b as v,o as a,c as s,a as e,e as f,w as h,u as r,f as i,F as y,g as t}from"./index-69032bf1.js";const T=e("strong",{class:"form-label"},"TIMER DEFINITION",-1),g=["value"],D=e("option",{value:"timeCycle"},"timeCycle",-1),b=e("option",{value:"timeDuration"},"timeDuration",-1),x=e("option",{value:"timeDate"},"timeDate",-1),C=[D,b,x],I=e("p",{class:"form-label"},"Value",-1),P=["value"],k={style:{width:"250px"}},N={key:0},V=e("div",null,[e("p",null," A specific point in time defined as ISO 8601 combined date and time representation. "),e("ul",null,[e("li",null,[e("code",null,"2019-10-01T12:00:00Z"),t(" - UTC time")]),e("li",null,[e("code",null,"2019-10-02T08:09:40+02:00"),t(" - UTC plus 2 hours zone offset ")])]),e("a",{href:"https://docs.camunda.org/manual/latest/reference/bpmn20/events/timer-events/#time-date",target:"_blank",rel:"noopener"},"Documentation: Timer events")],-1),F=[V],O={key:1},S=e("div",null,[e("p",null," A cycle defined as ISO 8601 repeating intervals format, or a cron expression. "),e("ul",null,[e("li",null,[e("code",null,"R5/PT10S"),t(" - every 10 seconds, up to 5 times")]),e("li",null,[e("code",null,"R/P1D"),t(" - every day, infinitely")]),e("li",null,[e("code",null,"0 0 9-17 * * MON-FRI"),t(" - every hour on the hour from 9-5 p.m. UTC Monday-Friday ")])]),e("a",{href:"https://docs.camunda.org/manual/latest/reference/bpmn20/events/timer-events/#time-cycle",target:"_blank",rel:"noopener"},"Documentation: Timer events")],-1),M=[S],R={key:2},w=e("div",null,[e("p",null,"A time duration defined as ISO 8601 durations format."),e("ul",null,[e("li",null,[e("code",null,"PT15S"),t(" - 15 seconds")]),e("li",null,[e("code",null,"PT1H30M"),t(" - 1 hour and 30 minutes")]),e("li",null,[e("code",null,"P14D"),t(" - 14 days")])]),e("a",{href:"https://docs.camunda.org/manual/latest/reference/bpmn20/events/timer-events/#time-duration",target:"_blank",rel:"noopener"},"Documentation: Timer events")],-1),A=[w],j=m({__name:"timerDefinition",setup(B){const o=p(""),l=_("target");function u(n){l.value.setProperties({timerType:n.target.value}),o.value=n.target.value}function c(n){l.value.setProperties({timerValue:n.currentTarget.value})}return(n,E)=>{const d=v("P");return a(),s(y,null,[T,e("div",null,[f(d,{class:"form-label"},{default:h(()=>[t("Type")]),_:1}),e("select",{name:"timerType",class:"form-select",style:{margin:"6px 0px"},value:r(l).properties.timerType,onChange:u},C,40,g)]),I,e("input",{autocomplete:"off",style:{margin:"6px 0px"},value:r(l).properties.timerValue,id:"name-input",type:"text",class:"form-control",onInput:c},null,40,P),e("div",k,[o.value==="timeDate"?(a(),s("div",N,F)):i("",!0),o.value==="timeCycle"?(a(),s("div",O,M)):i("",!0),o.value==="timeDuration"?(a(),s("div",R,A)):i("",!0)])],64)}}});export{j as default};
